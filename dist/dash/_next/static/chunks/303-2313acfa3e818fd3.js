"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[303],{26164:(e,t,a)=>{a.d(t,{cn:()=>n});var o=a(61512),r=a(58520);function n(){for(var e=arguments.length,t=Array(e),a=0;a<e;a++)t[a]=arguments[a];return(0,r.QP)((0,o.$)(t))}},87849:(e,t,a)=>{a.d(t,{F:()=>n});var o=a(96308);async function r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.fr,r=await fetch("".concat(a).concat(e),{...t,headers:{"Content-Type":"application/json",...t.headers}});if(!r.ok){let t=await r.text();throw console.error("API Error (".concat(r.status,") on ").concat(e,": ").concat(t)),Error("API request failed: ".concat(r.status," ").concat(r.statusText," - ").concat(t))}let n=r.headers.get("content-type");return n&&n.includes("application/json")?r.json():r.text()}let n={startJob:e=>{let t=new FormData;Object.keys(e).forEach(a=>{let o=e[a];"simulationType"===a?t.append("MD",String("MD"===o)):o instanceof File?t.append(a,o,o.name):null!=o&&t.append(a,String(o))});let a=localStorage.getItem("token");return a?fetch("".concat(o.fr,"/startJobMultipart"),{method:"POST",body:t,headers:{Authorization:"Bearer ".concat(a)}}).then(async e=>{if(!e.ok){let t=await e.text();throw console.error("API Error (".concat(e.status,") on /startJobMultipart: ").concat(t)),Error("API request failed: ".concat(e.status," ").concat(e.statusText," - ").concat(t))}return e.text()}):Promise.reject(Error("No authentication token found."))},runEnhancedSamplingJob:e=>{let t=new FormData;Object.keys(e).forEach(a=>{let o=e[a];"samplingType"!==a&&("proteinFile"===a&&o instanceof File?t.append("protein",o,o.name):o instanceof File?t.append(a,o,o.name):null!=o&&t.append(a,String(o)))});let a=localStorage.getItem("token");return a?fetch("".concat(o.fr,"/runOxdnaUmbrella"),{method:"POST",body:t,headers:{Authorization:"Bearer ".concat(a)}}).then(async e=>{if(!e.ok){let t=await e.text();throw console.error("API Error (".concat(e.status,") on /runOxdnaUmbrella: ").concat(t)),Error("API request failed: ".concat(e.status," ").concat(e.statusText," - ").concat(t))}return e.text()}):Promise.reject(Error("No authentication token found."))},startAnalysisJob:e=>{let t=localStorage.getItem("token");if(!t)return Promise.reject(Error("No authentication token found."));let a=new FormData;return Object.keys(e).forEach(t=>{let o=e[t];o instanceof File?a.append(t,o,o.name):null!=o&&a.append(t,String(o))}),fetch("".concat(o.fr,"/startAnalysisMultipart"),{method:"POST",headers:{Authorization:"Bearer ".concat(t)},body:a}).then(async e=>{if(!e.ok){let t=await e.text();throw console.error("API Error (".concat(e.status,") on /startAnalysisMultipart: ").concat(t)),Error("API request failed: ".concat(e.status," ").concat(e.statusText," - ").concat(t))}return e.text()})},stopJob:e=>{let t=localStorage.getItem("token");return t?r("/stopJob/".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}}):Promise.reject(Error("No authentication token found."))},resumeJob:e=>{let t=localStorage.getItem("token");return t?r("/resumeJob/".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}}):Promise.reject(Error("No authentication token found."))},deleteJob:e=>{let t=localStorage.getItem("token");return t?r("/deleteJob/".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}}):Promise.reject(Error("No authentication token found."))},getJobStatus:e=>{let t=localStorage.getItem("token");return t?r("/getJobStatus/".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}}):Promise.reject(Error("No authentication token found."))},getJobsByUser:async e=>{let t=localStorage.getItem("token");if(!t)throw Error("No authentication token found.");try{console.log("2");let e=await r("/getJobs",{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!e||"object"!=typeof e)return console.warn("getJobsByUser received non-object response:",e),[];return Object.values(e)}catch(t){if(console.error("Failed to get jobs for user ".concat(e,":"),t),t instanceof Error&&t.message.includes("404"))return[];throw t}},getEnergyData:async e=>r("/energy/".concat(e,"/0/3"),{method:"GET"}),getServerResources:async()=>Object.entries(await r("/getResources",{method:"GET"})).map((e,t)=>{let[a,o]=e;return{id:a,name:"Server ".concat(t+1),CPUavail:o.CPUavail,GPUavail:o.GPUavail,TotalRam:o.totalRAM,RAMavail:o.RAMavail,totalCPU:o.totalCPU}}),downloadFile:async(e,t)=>{let a=localStorage.getItem("token");if(!a)throw Error("No authentication token found.");let r=await fetch("".concat(o.fr,"/download/").concat(e,"/").concat(t),{method:"GET",headers:{Authorization:"Bearer ".concat(a)}});if(!r.ok){let a=await r.text();throw console.error("Download Error (".concat(r.status,") for ").concat(e,"/").concat(t,": ").concat(a)),Error("Download failed: ".concat(r.status," ").concat(r.statusText," - ").concat(a))}return r.blob()},downloadAllFiles:async e=>{let t=localStorage.getItem("token");if(!t)throw Error("No authentication token found.");let a=await fetch("".concat(o.fr,"/downloadAll/").concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}});if(!a.ok){let t=await a.text();throw console.error("Download All Error (".concat(a.status,") for ").concat(e,": ").concat(t)),Error("Download all failed: ".concat(a.status," ").concat(a.statusText," - ").concat(t))}return a.blob()},listJobFiles:async e=>{let t=localStorage.getItem("token");if(!t)throw Error("No authentication token found.");return Object.values(await r("/list/".concat(e),{method:"GET",headers:{Authorization:"Bearer ".concat(t)}})).sort()},getJobFileContent:async(e,t)=>(await n.downloadFile(e,t)).text(),registerUser:async e=>r("/auth/signup",{method:"POST",body:JSON.stringify({firstName:e.firstName,lastName:e.lastName,email:e.email,institutionName:e.instituteName,password:e.passwordLogin})},o.k1),loginUser:async(e,t)=>r("/auth/login",{method:"POST",body:JSON.stringify({email:e,password:t})},o.k1),getUserProfile:async()=>{let e=localStorage.getItem("token");if(!e)throw Error("No authentication token found.");return console.log(e),r("/auth/profile",{method:"POST",headers:{Authorization:"Bearer ".concat(e)}},o.k1)}}},96308:(e,t,a)=>{a.d(t,{QG:()=>m,TD:()=>p,VY:()=>g,W9:()=>h,XV:()=>f,eg:()=>b,fr:()=>u,k1:()=>d,q$:()=>y});var o=a(109),r=a(38391),n=a(46300),i=a(22374),l=a(54797),c=a(83103),s=a(3940);s.env.NEXT_PUBLIC_API_BASE_URL;let d=s.env.NEXT_PUBLIC_API_BASE_URL_PUBLIC||"http://localhost:3002/api/v1",u=s.env.NEXT_PUBLIC_API_BASE_URL||"http://localhost:8888";s.env.NEXT_PUBLIC_API_BASE_URL_PUBLIC;let p=[{href:"/submit-simulation",icon:o.A,label:"Submit Simulation"},{href:"/job-status",icon:r.A,label:"Job Status"},{href:"/server-status",icon:n.A,label:"Server Status"},{href:"/enhanced-sampling",icon:i.A,label:"Enhanced Sampling"},{href:"/external-analysis",icon:l.A,label:"External Analysis"},{href:"/about",icon:c.A,label:"About Us"}],m={jobName:"",topology:void 0,configuration:void 0,forceFile:void 0,priority:-1,maxTime:-1,simulationType:"MD",gpu:!1,steps:1e7,confInterval:1e5,dt:.003,interactionType:0,hBondRestraint:!1,T:"20C",saltConc:1,verletSkin:.4,override:"",use_average_seq:!1,max_backbone_force:0,seed:-1,thermostat:"john",delta_translation:.02,delta_rotation:.04,mismatch_repulsion:!1,mismatch_repulsion_strength:1},b={jobName:"",samplingType:"Umbrella",topology:void 0,configuration:void 0,testPreEq:!1,nucleotideIndexes0:"10,11,12,16, 9",nucleotideIndexes1:"14, 21, 30",xmin:.12,xmax:25,steps:1e6,smallSystem:!1,T:"37C",saltConc:1,nWindows:20,stiff:1,proteinFile:void 0,sequenceDependent:!0,pullingSteps:1e4,eqSteps:1e7,meltingTemperature:!1,forceFile:void 0},f=[{label:"DNA2",value:0},{label:"RNA2",value:1}],g=["john","no","refresh","brownian","langevin","bussi","DPD"],y={0:{type:"Done",description:"Task completed successfully",variant:"success"},10:{type:"Running",description:"Job is currently running",variant:"default"},11:{type:"Reserved",description:"Reserved for special purpose like docker jobs, etc",variant:"default"},100:{type:"Pending",description:"Pending due to normal reasons or resources are full",variant:"outline"},101:{type:"Pending Trig",description:"This task will be started after completion of a previous job",variant:"outline"},102:{type:"Pending Next",description:"Task completed but has not be registered in the system",variant:"outline"},103:{type:"Pending Resume",description:"Queue for the resume job when resources are free",variant:"outline"},110:{type:"Pending Full",description:"Job needs to allocate a full resource",variant:"outline"},202:{type:"Stopped",description:"Stopped prematurely by user or system",variant:"secondary"},203:{type:"Deleted",description:"Job does not exist in storage",variant:"secondary"},600:{type:"DB Mismatch",description:"Database is not consistent",variant:"destructive"},601:{type:"DB Mismatch",description:"Extra pending entry in the database",variant:"destructive"},501:{type:"Error",description:"Feature requested doesn't exist",variant:"destructive"},502:{type:"Error",description:"Error in writing files",variant:"destructive"},503:{type:"Error",description:"Main program like oxDNA could not be executed",variant:"destructive"},505:{type:"Error",description:"Job stopped abruptly before completion, check log file",variant:"destructive"},506:{type:"Error",description:"Previous job has an error status (active > 199)",variant:"destructive"}},h=[{value:0,command:"align",label:"Align",description:"Aligns each frame in a trajectory to the first frame.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0},{name:"otherFile1",label:"Reference Configuration",description:"The reference frame to align to.",required:!1}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index",description:"Index of particles to use for alignment."}],outputFile:"aligned.dat"},{value:1,command:"anm_parameterize",label:"ANM Parameterize",description:"Compute par file for DNA-ANM model.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"Input configuration.",required:!0}],params:[{name:"cutoff",backendName:"double1",type:"number",label:"Cutoff",description:"Cutoff distance for the model."},{name:"model",backendName:"str1",type:"text",label:"Model",description:"e.g., 'calpha'."}],outputFile:"anm.par"},{value:2,command:"backbone_flexibility",label:"Backbone Flexibility",description:"Computes the deviations in the backbone torsion angles.",files:[{name:"topology",label:"Topology File",description:"The system topology.",required:!0},{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index",description:"Index of nucleotides to analyze."}],outputFile:"backbone_flex.dat"},{value:3,command:"bond_analysis",label:"Bond Analysis",description:"Compare the bonds found at each trajectory with the intended design.",files:[{name:"topology",label:"Topology File",description:"The system topology.",required:!0},{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0},{name:"otherFile1",label:"Pairs File",description:"A file containing base pairs.",required:!1}],params:[{name:"plot",backendName:"str1",type:"text",label:"Plot Filename",description:"Optional filename for a plot output."}],outputFile:"bonds.dat"},{value:4,command:"centroid",label:"Centroid",description:"Find the configuration in a trajectory closest to a provided reference configuration.",files:[{name:"topology",label:"Topology File",description:"The system topology.",required:!0},{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index",description:"Index of particles for calculation."}],outputFile:"centroid.dat"},{value:5,command:"clustering",label:"Clustering",description:"Calculates clusters based on provided order parameters.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"clusters",backendName:"int1",type:"number",label:"Number of Clusters",description:"The number of clusters to find (k)."},{name:"metric",backendName:"str1",type:"text",label:"Metric",description:"Metric to use for clustering (e.g., 'rmsd')."}],outputFile:"clusters.dat"},{value:7,command:"contact_map",label:"Contact Map",description:"Calculate and display the contact map for a structure.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"cutoff",backendName:"double1",type:"number",label:"Cutoff"},{name:"index",backendName:"str1",type:"textarea",label:"Index"}],outputFile:"contact_map.dat"},{value:8,command:"decimate",label:"Decimate",description:"Creates a smaller trajectory only including start/stop/stride frames from the input.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"factor",backendName:"int1",type:"number",label:"Factor",description:"Decimation factor."}],outputFile:"decimated.dat"},{value:9,command:"deviations",label:"Deviations",description:"Compute the RMSD of each nucleotide from the mean structure produced by compute_mean.py.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0},{name:"otherFile1",label:"Reference File",description:"Mean structure reference file.",required:!1}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index"}],outputFile:"rmsf.dat"},{value:10,command:"distance",label:"Distance",description:"Finds the ensemble of distances between any two particles in the system.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0},{name:"otherFile1",label:"Reference File",description:"Reference configuration file.",required:!1}],params:[{name:"index1",backendName:"str1",type:"textarea",label:"Index 1"},{name:"index2",backendName:"str2",type:"textarea",label:"Index 2"}],outputFile:"distances.dat"},{value:11,command:"db_to_force",label:"Dot-bracket to force",description:"Create an external forces file enforcing the current base-pairing arrangement.",files:[{name:"otherFile1",label:"Dot-bracket File",description:"Input dot-bracket file.",required:!0}],params:[{name:"sequence",backendName:"str1",type:"textarea",label:"Sequence"}],outputFile:"forces.dat"},{value:12,command:"duplex_angle_plotter",label:"Duplex Angle Plotter",description:"Finds the ensemble of angles between pairs of duplexes.",files:[{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"duplex_list",backendName:"str1",type:"text",label:"Duplex List",description:"e.g., '1-10,11-20'"}],outputFile:"duplex_angles.dat"},{value:13,command:"duplex_finder",label:"Duplex Finder",description:"Fit vectors to every duplex in the structure.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",description:"The main trajectory file.",required:!0}],params:[{name:"min_length",backendName:"int1",type:"number",label:"Min Length"}],outputFile:"duplex_vectors.dat"},{value:14,command:"file_info",label:"File Info",description:"Prints metadata about trajectories.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[],outputFile:"info.txt"},{value:15,command:"forces2db",label:"Forces to Dot-bracket",description:"Convert a force file to dot-bracket notation.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"otherFile1",label:"Forces File",required:!0,description:""}],params:[],outputFile:"forces.db"},{value:16,command:"forces2pairs",label:"Forces to Pairs",description:"Convert an external force file to a list of particle pairs.",files:[{name:"otherFile1",label:"Forces File",required:!0,description:""}],params:[{name:"threshold",backendName:"double1",type:"number",label:"Threshold"}],outputFile:"pairs.dat"},{value:17,command:"generate_force",label:"Generate Force",description:"Create an external forces file enforcing the current base-pairing arrangement.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""},{name:"otherFile1",label:"Pairs File",required:!1,description:"Optional pairs file."}],params:[{name:"stiff",backendName:"double1",type:"number",label:"Stiffness"}],outputFile:"forces.dat"},{value:18,command:"mean",label:"Mean",description:"Computes the mean structure of a trajectory file.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"deviations",backendName:"bool1",type:"boolean",label:"Calculate Deviations"},{name:"index",backendName:"str1",type:"textarea",label:"Index"},{name:"align",backendName:"int1",type:"number",label:"Align"}],outputFile:"mean.dat"},{value:19,command:"minify",label:"Minify",description:"Compress given configuration.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"max_iter",backendName:"int1",type:"number",label:"Max Iterations"}],outputFile:"min.dat"},{value:20,command:"multidimensional_scaling_mean",label:"MDS Mean",description:"Calculate molecular contacts, and assembles an average set of contacts based on MDS.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"dimensions",backendName:"int1",type:"number",label:"Dimensions"}],outputFile:"mds_mean.dat"},{value:21,command:"output_bonds",label:"Output Bonds",description:"List all the interactions between nucleotides.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"binary",backendName:"bool1",type:"boolean",label:"Binary Output"}],outputFile:"bonds.dat"},{value:22,command:"oxDNA_PDB",label:"oxDNA -> PDB",description:"Convert oxDNA files to PDB.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"pdb_type",backendName:"str1",type:"text",label:"PDB Type",description:"e.g., 'all-atom'"}],outputFile:"output.pdb"},{value:23,command:"pairs2db",label:"Pairs to Dot-bracket",description:"Convert a pair file to dot-bracket notation.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"otherFile1",label:"Pairs File",required:!0,description:""}],params:[],outputFile:"output.db"},{value:24,command:"PDB_oxDNA",label:"PDB -> oxDNA",description:"Convert a PDB file to oxDNA.",files:[{name:"otherFile1",label:"PDB File",required:!0,description:"Input .pdb file."}],params:[{name:"seq_dependent",backendName:"bool1",type:"boolean",label:"Sequence Dependent"}],outputFile:"output.top"},{value:25,command:"persistence_length",label:"Persistence Length",description:"Calculates persistence length and contour length of a paired sequence of DNA.",files:[{name:"topology",label:"Topology File",required:!0,description:""},{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"segment_length",backendName:"int1",type:"number",label:"Segment Length"}],outputFile:"persistence.dat"},{value:27,command:"pca",label:"PCA",description:"Calculates a principal component analysis of nucleotide deviations over a trajectory.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"components",backendName:"int1",type:"number",label:"Components"},{name:"align",backendName:"bool1",type:"boolean",label:"Align"}],outputFile:"pca.dat"},{value:28,command:"subset_trajectory",label:"Subset Trajectory",description:"Extracts parts of a structure into separate trajectories.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index"}],outputFile:"subset.dat"},{value:29,command:"superimpose",label:"Superimpose",description:"Superimposes one or more structures sharing a topology to a reference structure.",files:[{name:"configuration",label:"Trajectory/Configuration File",required:!0,description:""},{name:"otherFile1",label:"Reference File",required:!1,description:""}],params:[{name:"index",backendName:"str1",type:"textarea",label:"Index"}],outputFile:"superimposed.dat"}].filter(e=>26!==e.value)}}]);